{"version":3,"sources":["api.js","components/Announcement/Announcement.jsx","components/AnnouncementsList/AnnouncementsList.jsx","variables.js","components/AnnouncementForm/AnnouncementForm.jsx","components/Header/Header.jsx","App.jsx","index.jsx"],"names":["API","a","fetch","method","response","json","Announcement","id","date","announcementDescription","announcementTitle","handleEdit","handleRemove","Card","style","width","margin","Content","description","extra","Icon","name","className","Button","basic","color","content","onClick","then","text","removeAnnouncementAPI","AnnouncementsList","announcements","map","DASHBOARD","ANNOUNCEMENTFORM","ANNOUNCEMENT","uuidv4","AnnouncementForm","setAnnouncements","editedAnnouncement","setNavigationActive","useState","newAnnouncement","setNewAnnouncement","useEffect","hasError","setHasError","handleChange","event","target","value","Form","onSubmit","preventDefault","prevState","length","some","announcement","data","body","JSON","stringify","headers","setAnnouncementsAPI","Group","widths","Field","onChange","control","Input","label","placeholder","type","navigation","title","Header","setEditedAnnouncement","setQuery","query","App","navigationActive","searchQuery","setSearchQuery","announcementId","filter","find","toLowerCase","includes","slice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6807d028.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nconst API = 'https://announcement-website.herokuapp.com/api';\n\nasync function setAnnouncementsAPI(data = {}) {\n  const response = await fetch(API, {\n    method: 'POST',\n    // mode: 'cors',\n    // cache: 'no-cache',\n    // credentials: 'same-origin',\n    // headers: {\n    //   'Content-Type': 'application/json',\n    // },\n    // redirect: 'follow',\n    // referrerPolicy: 'no-referrer',\n    // body: JSON.stringify(data),\n  });\n  return response.json();\n}\n\nconst removeAnnouncementAPI = (id) => {\n  fetch(`${API}/${id}`, {\n    method: 'DELETE',\n  })\n    .then((response) => response.text());\n};\n\nconst editAnnouncementAPI = (id, data) => {\n  fetch(`${API}/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n    .then((response) => response.json());\n};\n\nconst getAnnouncementAPI = () => fetch(API)\n  .then((response) => response.json())\n  .then((json) => json);\n\nexport {\n  getAnnouncementAPI,\n  setAnnouncementsAPI,\n  removeAnnouncementAPI,\n  editAnnouncementAPI,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Card, Icon, Button } from 'semantic-ui-react'\nimport { removeAnnouncementAPI } from '../../api';\nimport './Announcement.scss';\n\nexport const Announcement = ({\n  id,\n  date,\n  announcementDescription,\n  announcementTitle,\n  handleEdit,\n  handleRemove,\n}) => (\n  <Card style={{width: '90vw', margin: '20px'}}>\n    <Card.Content description={announcementTitle} />\n    <Card.Content description={announcementDescription} />\n    <Card.Content extra >\n      <Icon name='calendar alternate outline' />\n      {date}\n    </Card.Content>\n    <div className=\"container\">\n      <Button\n        basic\n        color=\"grey\"\n        content=\"Edit\"\n        onClick={() => handleEdit(id)}\n      />\n      <Button\n        basic\n        color=\"red\"\n        content=\"Delete\"\n        onClick={() => {\n          handleRemove(id);\n          removeAnnouncementAPI(id);\n        }}\n      />\n    </div>\n  </Card>\n)\n\nAnnouncement.propTypes = {\n  id: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n  announcementTitle: PropTypes.string.isRequired,\n  announcementDescription: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  handleEdit: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Announcement } from '../Announcement';\nimport './AnnouncementsList.scss';\n\nexport const AnnouncementsList = ({ announcements, handleEdit, handleRemove }) => (\n  <div className=\"Announcements\">\n    {announcements.map(({\n      id, date, announcementTitle, announcementDescription,\n    }) => (\n      <Announcement\n        handleRemove={handleRemove}\n        handleEdit={handleEdit}\n        key={id}\n        id={id}\n        date={date}\n        announcementTitle={announcementTitle}\n        announcementDescription={announcementDescription}\n      />\n    ))}\n  </div>\n);\n\nAnnouncementsList.propTypes = {\n  announcements: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    announcementTitle: PropTypes.string.isRequired,\n    announcementDescription: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n  })).isRequired,\n  handleEdit: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n};\n","import { v4 as uuidv4 } from 'uuid';\n\nconst DASHBOARD = 'DASHBOARD';\nconst ANNOUNCEMENTFORM = 'ANNOUNCEMENTFORM';\n\nconst ANNOUNCEMENT = {\n  id: uuidv4(),\n  announcementTitle: '',\n  announcementDescription: '',\n  date: '',\n};\n\nexport { ANNOUNCEMENT, DASHBOARD, ANNOUNCEMENTFORM };\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  Form,\n  Input\n} from 'semantic-ui-react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { editAnnouncementAPI, setAnnouncementsAPI } from '../../api';\nimport { ANNOUNCEMENT, DASHBOARD } from '../../variables';\nimport './AnnouncementForm.scss';\n\nexport const AnnouncementForm = ({ setAnnouncements, editedAnnouncement, setNavigationActive }) => {\n  const [newAnnouncement, setNewAnnouncement] = useState(ANNOUNCEMENT);\n  useEffect(() => {\n    if (editedAnnouncement) {\n      setNewAnnouncement({ ...newAnnouncement, ...editedAnnouncement });\n    } else {\n      setNewAnnouncement({ ...newAnnouncement, id: uuidv4() });\n    }\n  }, []);\n\n  const [hasError, setHasError] = useState({\n    announcementTitle: false,\n    announcementDescription: false,\n    date: false,\n  });\n\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n    setNewAnnouncement({ ...newAnnouncement, [name]: value });\n    setHasError({ ...hasError, [name]: false });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (newAnnouncement.announcementTitle === '') {\n      setHasError((prevState) => ({ ...prevState, announcementTitle: true }));\n    }\n\n    if (newAnnouncement.announcementDescription === '') {\n      setHasError((prevState) => ({ ...prevState, announcementDescription: true }));\n    }\n\n    if (newAnnouncement.date === '') {\n      setHasError((prevState) => ({ ...prevState, date: true }));\n    }\n\n    if (\n      newAnnouncement.id\n      && newAnnouncement.announcementTitle.length\n      && newAnnouncement.announcementDescription.length\n      && newAnnouncement.date.length\n    ) {\n      setAnnouncements((prevState) => {\n        if (prevState.some((announcement) => announcement.id === newAnnouncement.id)) {\n          editAnnouncementAPI(newAnnouncement.id, newAnnouncement);\n          return prevState.map((announcement) => (announcement.id === newAnnouncement.id ? newAnnouncement : announcement));\n        }\n        return [...prevState, newAnnouncement];\n      });\n\n      setAnnouncementsAPI(newAnnouncement);\n\n      setNewAnnouncement(ANNOUNCEMENT);\n\n      setNavigationActive(DASHBOARD);\n    }\n  };\n\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group widths=\"equal\">\n        <div className=\"wrapper\">\n          <Form.Field\n            className={hasError.announcementTitle ? 'error' : ''}\n            value={newAnnouncement.announcementTitle}\n            onChange={handleChange}\n            name=\"announcementTitle\"\n            control={Input}\n            label=\"Announcement\"\n            placeholder=\"Announcement\"\n          />\n          {hasError.announcementTitle && (\n            <p className=\"error__title\">\n              Pleace enter the Announcement\n            </p>\n          )}\n        </div>\n        <div className=\"wrapper\">\n          <Form.Field\n            className={hasError.announcementDescription ? 'error' : ''}\n            value={newAnnouncement.announcementDescription}\n            onChange={handleChange}\n            name=\"announcementDescription\"\n            control={Input}\n            label=\"Announcement Description\"\n            placeholder=\"Announcement Description\"\n          />\n          {hasError.announcementDescription && (\n            <p className=\"error__title\">\n              Pleace enter the Description\n            </p>\n          )}\n        </div>\n        <div className=\"wrapper\">\n          <Form.Field\n            className={hasError.date ? 'error' : ''}\n            value={newAnnouncement.date}\n            onChange={handleChange}\n            name=\"date\"\n            control={Input}\n            label=\"Date\"\n            type=\"date\"\n          />\n          {hasError.date && (\n            <p className=\"error__title\">\n              Pleace enter the date\n            </p>\n          )}\n        </div>\n      </Form.Group>\n\n      <Form.Field control={Button}>Add a Announcement</Form.Field>\n    </Form>\n  );\n};\n\nAnnouncementForm.propTypes = {\n  setAnnouncements: PropTypes.func.isRequired,\n  editedAnnouncement: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number,]),\n    announcementTitle: PropTypes.string,\n    announcementDescription: PropTypes.string,\n    date: PropTypes.string,\n  }).isRequired,\n  setNavigationActive: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Form,\n  Input\n} from 'semantic-ui-react';\nimport { ANNOUNCEMENTFORM, DASHBOARD } from '../../variables';\nimport './Header.scss';\nconst navigation = [\n  { id: 1, title: 'Announcement' },\n  { id: 2, title: 'Add new announcement' },\n];\n\nexport const Header = ({ setNavigationActive, setEditedAnnouncement, query, setQuery }) => {\n\n  const handleChange = (event) => {\n    setQuery(event.target.value)\n  }\n\n  return (\n    <div className=\"header\">\n      {navigation.map(({ id, title }) => (\n        <button\n          onClick={() => {\n            if (id === 1) {\n              setNavigationActive(DASHBOARD);\n            } else {\n              setNavigationActive(ANNOUNCEMENTFORM);\n            }\n            setEditedAnnouncement(null)\n          }}\n          className=\"header__button\"\n          key={id}\n          type=\"button\"\n        >\n          {title}\n        </button>\n      ))}\n      <Form.Field\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Search\"\n        onChange={handleChange}\n        control={Input}\n      />\n    </div>\n  )\n}\n\nHeader.propTypes = {\n  setNavigationActive: PropTypes.func.isRequired,\n  setEditedAnnouncement: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { getAnnouncementAPI } from './api';\nimport './App.css';\nimport { Header, AnnouncementsList, AnnouncementForm } from './components';\nimport { DASHBOARD, ANNOUNCEMENTFORM } from './variables';\n\nfunction App() {\n  const [announcements, setAnnouncements] = useState([]);\n  const [navigationActive, setNavigationActive] = useState(DASHBOARD);\n  const [editedAnnouncement, setEditedAnnouncement] = useState(/* {\n    id: Date.now(),\n    date: '',\n    announcementTitle: '',\n    announcementDescription: '',\n  } */);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    getAnnouncementAPI()\n      .then((response) => setAnnouncements(response));\n  }, []);\n\n  const handleEdit = (announcementId) => {\n    setNavigationActive(ANNOUNCEMENTFORM);\n    setEditedAnnouncement(announcements.find(({ id }) => id === announcementId));\n  };\n\n  const handleRemove = (announcementId) => {\n    setAnnouncements(announcements.filter((announcement) => announcement.id !== announcementId));\n  };\n  return (\n    <div>\n      <Header\n        setNavigationActive={setNavigationActive}\n        setEditedAnnouncement={setEditedAnnouncement}\n        query={searchQuery}\n        setQuery={setSearchQuery}\n      />\n      {navigationActive === DASHBOARD && (\n        <AnnouncementsList\n          handleRemove={handleRemove}\n          handleEdit={handleEdit}\n          announcements={!searchQuery.length \n            ? announcements \n            : announcements.filter(announcement => \n              announcement.announcementTitle.toLowerCase().includes(searchQuery.toLowerCase()\n            ) ||\n            announcement.announcementDescription.toLowerCase().includes(searchQuery.toLowerCase())).slice(0, 3)}\n        />\n      )}\n\n      {navigationActive === ANNOUNCEMENTFORM && (\n        <AnnouncementForm\n          setNavigationActive={setNavigationActive}\n          setAnnouncements={setAnnouncements}\n          editedAnnouncement={editedAnnouncement}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}